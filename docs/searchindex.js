Search.setIndex({"alltitles": {"Contents:": [[6, null]], "Indices and tables": [[6, "indices-and-tables"]], "Submodules": [[0, "submodules"]], "Welcome to DbCquantum\u2019s documentation!": [[6, "welcome-to-dbcquantum-s-documentation"]], "dbcquantum": [[5, "dbcquantum"]], "dbcquantum package": [[0, "module-dbcquantum"]], "dbcquantum.circuit module": [[1, "module-dbcquantum.circuit"]], "dbcquantum.common module": [[2, "module-dbcquantum.common"]], "dbcquantum.err module": [[3, "module-dbcquantum.err"]], "dbcquantum.utils module": [[4, "module-dbcquantum.utils"]]}, "docnames": ["apidoc/dbcquantum", "apidoc/dbcquantum.circuit", "apidoc/dbcquantum.common", "apidoc/dbcquantum.err", "apidoc/dbcquantum.utils", "apidoc/modules", "index"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["apidoc/dbcquantum.rst", "apidoc/dbcquantum.circuit.rst", "apidoc/dbcquantum.common.rst", "apidoc/dbcquantum.err.rst", "apidoc/dbcquantum.utils.rst", "apidoc/modules.rst", "index.rst"], "indexentries": {"add_condition() (dbcquantum.circuit.aqcmeasure method)": [[1, "dbcquantum.circuit.AQCMeasure.add_condition", false]], "add_condition() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.add_condition", false]], "add_condition_use_param() (dbcquantum.circuit.aqcmeasure method)": [[1, "dbcquantum.circuit.AQCMeasure.add_condition_use_param", false]], "add_condition_use_param() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.add_condition_use_param", false]], "add_conditions_gen() (dbcquantum.circuit.aqcmeasure method)": [[1, "dbcquantum.circuit.AQCMeasure.add_conditions_gen", false]], "add_conditions_gen() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.add_conditions_gen", false]], "add_eq_circuit() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.add_eq_circuit", false]], "add_eq_circuit_use_param() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.add_eq_circuit_use_param", false]], "add_eq_circuits_gen() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.add_eq_circuits_gen", false]], "add_post_condition() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.add_post_condition", false]], "add_post_condition_use_param() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.add_post_condition_use_param", false]], "add_post_conditions_gen() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.add_post_conditions_gen", false]], "add_pre_condition() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.add_pre_condition", false]], "add_pre_condition_use_param() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.add_pre_condition_use_param", false]], "add_pre_conditions_gen() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.add_pre_conditions_gen", false]], "append() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.append", false]], "append_superposition() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.append_superposition", false]], "append_superposition_basis() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.append_superposition_basis", false]], "append_superposition_basis_from_param() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.append_superposition_basis_from_param", false]], "append_superposition_gen() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.append_superposition_gen", false]], "aqcmeasure (class in dbcquantum.circuit)": [[1, "dbcquantum.circuit.AQCMeasure", false]], "assertquantumcircuit (class in dbcquantum.circuit)": [[1, "dbcquantum.circuit.AssertQuantumCircuit", false]], "barrier() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.barrier", false]], "bin_frac_to_dec() (in module dbcquantum.utils)": [[4, "dbcquantum.utils.bin_frac_to_dec", false]], "binary_basis() (in module dbcquantum.utils)": [[4, "dbcquantum.utils.binary_basis", false]], "ccx() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.ccx", false]], "coeff_of_basis() (in module dbcquantum.utils)": [[4, "dbcquantum.utils.coeff_of_basis", false]], "condition_name (dbcquantum.err.measureconditionerrorinfo attribute)": [[3, "dbcquantum.err.MeasureConditionErrorInfo.condition_name", false]], "condition_name (dbcquantum.err.stateconditionerrorinfo attribute)": [[3, "dbcquantum.err.StateConditionErrorInfo.condition_name", false]], "condition_name (dbcquantum.err.superpositionstateconditionerrorinfo attribute)": [[3, "dbcquantum.err.SuperpositionStateConditionErrorInfo.condition_name", false]], "conditionerror": [[3, "dbcquantum.err.ConditionError", false]], "conditionerrorinfo (class in dbcquantum.err)": [[3, "dbcquantum.err.ConditionErrorInfo", false]], "copy() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.copy", false]], "cp() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.cp", false]], "cx() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.cx", false]], "dbcquantum": [[0, "module-dbcquantum", false]], "dbcquantum.circuit": [[1, "module-dbcquantum.circuit", false]], "dbcquantum.common": [[2, "module-dbcquantum.common", false]], "dbcquantum.err": [[3, "module-dbcquantum.err", false]], "dbcquantum.utils": [[4, "module-dbcquantum.utils", false]], "dbcquantumerror": [[3, "dbcquantum.err.DbCQuantumError", false]], "decompose() (in module dbcquantum.utils)": [[4, "dbcquantum.utils.decompose", false]], "density_matrix_to_statevector() (in module dbcquantum.utils)": [[4, "dbcquantum.utils.density_matrix_to_statevector", false]], "eq_state() (in module dbcquantum.utils)": [[4, "dbcquantum.utils.eq_state", false]], "h() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.h", false]], "i() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.i", false]], "info (dbcquantum.err.stateconditionerror attribute)": [[3, "dbcquantum.err.StateConditionError.info", false]], "info (dbcquantum.err.superpositionstateconditionerror attribute)": [[3, "dbcquantum.err.SuperpositionStateConditionError.info", false]], "inverse() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.inverse", false]], "is_basis() (in module dbcquantum.utils)": [[4, "dbcquantum.utils.is_basis", false]], "is_scalar_multiple() (in module dbcquantum.utils)": [[4, "dbcquantum.utils.is_scalar_multiple", false]], "l (dbcquantum.err.superpositioninfo attribute)": [[3, "dbcquantum.err.SuperpositionInfo.l", false]], "make_zeros_state() (in module dbcquantum.utils)": [[4, "dbcquantum.utils.make_zeros_state", false]], "measureconditionerror": [[3, "dbcquantum.err.MeasureConditionError", false]], "measureconditionerrorinfo (class in dbcquantum.err)": [[3, "dbcquantum.err.MeasureConditionErrorInfo", false]], "module": [[0, "module-dbcquantum", false], [1, "module-dbcquantum.circuit", false], [2, "module-dbcquantum.common", false], [3, "module-dbcquantum.err", false], [4, "module-dbcquantum.utils", false]], "num_qubits (dbcquantum.circuit.aqcmeasure attribute)": [[1, "dbcquantum.circuit.AQCMeasure.num_qubits", false]], "num_qubits (dbcquantum.circuit.assertquantumcircuit attribute)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.num_qubits", false]], "p() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.p", false]], "param (dbcquantum.err.measureconditionerrorinfo attribute)": [[3, "dbcquantum.err.MeasureConditionErrorInfo.param", false]], "param (dbcquantum.err.stateconditionerrorinfo attribute)": [[3, "dbcquantum.err.StateConditionErrorInfo.param", false]], "param (dbcquantum.err.superpositionstateconditionerrorinfo attribute)": [[3, "dbcquantum.err.SuperpositionStateConditionErrorInfo.param", false]], "partial_state() (in module dbcquantum.utils)": [[4, "dbcquantum.utils.partial_state", false]], "post_state (dbcquantum.err.stateconditionerrorinfo attribute)": [[3, "dbcquantum.err.StateConditionErrorInfo.post_state", false]], "post_state (dbcquantum.err.superpositionstateconditionerrorinfo attribute)": [[3, "dbcquantum.err.SuperpositionStateConditionErrorInfo.post_state", false]], "post_superposition_states (dbcquantum.err.superpositionstateconditionerrorinfo attribute)": [[3, "dbcquantum.err.SuperpositionStateConditionErrorInfo.post_superposition_states", false]], "postprocessed_result (dbcquantum.err.measureconditionerrorinfo attribute)": [[3, "dbcquantum.err.MeasureConditionErrorInfo.postprocessed_result", false]], "pre_measure_state (dbcquantum.err.measureconditionerrorinfo attribute)": [[3, "dbcquantum.err.MeasureConditionErrorInfo.pre_measure_state", false]], "pre_state (dbcquantum.err.stateconditionerrorinfo attribute)": [[3, "dbcquantum.err.StateConditionErrorInfo.pre_state", false]], "pre_state (dbcquantum.err.superpositionstateconditionerrorinfo attribute)": [[3, "dbcquantum.err.SuperpositionStateConditionErrorInfo.pre_state", false]], "pre_superposition_states (dbcquantum.err.superpositionstateconditionerrorinfo attribute)": [[3, "dbcquantum.err.SuperpositionStateConditionErrorInfo.pre_superposition_states", false]], "remove_assertions() (dbcquantum.circuit.aqcmeasure method)": [[1, "dbcquantum.circuit.AQCMeasure.remove_assertions", false]], "remove_assertions() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.remove_assertions", false]], "remove_assertions_to_circuit() (dbcquantum.circuit.aqcmeasure method)": [[1, "dbcquantum.circuit.AQCMeasure.remove_assertions_to_circuit", false]], "result (dbcquantum.err.measureconditionerrorinfo attribute)": [[3, "dbcquantum.err.MeasureConditionErrorInfo.result", false]], "run() (dbcquantum.circuit.aqcmeasure method)": [[1, "dbcquantum.circuit.AQCMeasure.run", false]], "run() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.run", false]], "run_without_assertion() (dbcquantum.circuit.aqcmeasure method)": [[1, "dbcquantum.circuit.AQCMeasure.run_without_assertion", false]], "run_without_assertion() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.run_without_assertion", false]], "rx() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.rx", false]], "ry() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.ry", false]], "rz() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.rz", false]], "rzx() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.rzx", false]], "s() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.s", false]], "sdg() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.sdg", false]], "split_each_qubit_states() (in module dbcquantum.utils)": [[4, "dbcquantum.utils.split_each_qubit_states", false]], "state1 (dbcquantum.err.superpositionstateconditionerrorinfo attribute)": [[3, "dbcquantum.err.SuperpositionStateConditionErrorInfo.state1", false]], "state2 (dbcquantum.err.superpositionstateconditionerrorinfo attribute)": [[3, "dbcquantum.err.SuperpositionStateConditionErrorInfo.state2", false]], "state_sum() (in module dbcquantum.utils)": [[4, "dbcquantum.utils.state_sum", false]], "stateconditionerror": [[3, "dbcquantum.err.StateConditionError", false]], "stateconditionerrorinfo (class in dbcquantum.err)": [[3, "dbcquantum.err.StateConditionErrorInfo", false]], "superpositioninfo (class in dbcquantum.err)": [[3, "dbcquantum.err.SuperpositionInfo", false]], "superpositionstateconditionerror": [[3, "dbcquantum.err.SuperpositionStateConditionError", false]], "superpositionstateconditionerrorinfo (class in dbcquantum.err)": [[3, "dbcquantum.err.SuperpositionStateConditionErrorInfo", false]], "swap() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.swap", false]], "sx() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.sx", false]], "sxdg() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.sxdg", false]], "t() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.t", false]], "tdg() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.tdg", false]], "to_statevector() (in module dbcquantum.utils)": [[4, "dbcquantum.utils.to_Statevector", false]], "toffoli() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.toffoli", false]], "u() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.u", false]], "x() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.x", false]], "y() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.y", false]], "z() (dbcquantum.circuit.assertquantumcircuit method)": [[1, "dbcquantum.circuit.AssertQuantumCircuit.z", false]]}, "objects": {"": [[0, 0, 0, "-", "dbcquantum"]], "dbcquantum": [[1, 0, 0, "-", "circuit"], [2, 0, 0, "-", "common"], [3, 0, 0, "-", "err"], [4, 0, 0, "-", "utils"]], "dbcquantum.circuit": [[1, 1, 1, "", "AQCMeasure"], [1, 1, 1, "", "AssertQuantumCircuit"]], "dbcquantum.circuit.AQCMeasure": [[1, 2, 1, "", "add_condition"], [1, 2, 1, "", "add_condition_use_param"], [1, 2, 1, "", "add_conditions_gen"], [1, 3, 1, "", "num_qubits"], [1, 2, 1, "", "remove_assertions"], [1, 2, 1, "", "remove_assertions_to_circuit"], [1, 2, 1, "", "run"], [1, 2, 1, "", "run_without_assertion"]], "dbcquantum.circuit.AssertQuantumCircuit": [[1, 2, 1, "", "add_condition"], [1, 2, 1, "", "add_condition_use_param"], [1, 2, 1, "", "add_conditions_gen"], [1, 2, 1, "", "add_eq_circuit"], [1, 2, 1, "", "add_eq_circuit_use_param"], [1, 2, 1, "", "add_eq_circuits_gen"], [1, 2, 1, "", "add_post_condition"], [1, 2, 1, "", "add_post_condition_use_param"], [1, 2, 1, "", "add_post_conditions_gen"], [1, 2, 1, "", "add_pre_condition"], [1, 2, 1, "", "add_pre_condition_use_param"], [1, 2, 1, "", "add_pre_conditions_gen"], [1, 2, 1, "", "append"], [1, 2, 1, "", "append_superposition"], [1, 2, 1, "", "append_superposition_basis"], [1, 2, 1, "", "append_superposition_basis_from_param"], [1, 2, 1, "", "append_superposition_gen"], [1, 2, 1, "", "barrier"], [1, 2, 1, "", "ccx"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "cp"], [1, 2, 1, "", "cx"], [1, 2, 1, "", "h"], [1, 2, 1, "", "i"], [1, 2, 1, "", "inverse"], [1, 3, 1, "", "num_qubits"], [1, 2, 1, "", "p"], [1, 2, 1, "", "remove_assertions"], [1, 2, 1, "", "run"], [1, 2, 1, "", "run_without_assertion"], [1, 2, 1, "", "rx"], [1, 2, 1, "", "ry"], [1, 2, 1, "", "rz"], [1, 2, 1, "", "rzx"], [1, 2, 1, "", "s"], [1, 2, 1, "", "sdg"], [1, 2, 1, "", "swap"], [1, 2, 1, "", "sx"], [1, 2, 1, "", "sxdg"], [1, 2, 1, "", "t"], [1, 2, 1, "", "tdg"], [1, 2, 1, "", "toffoli"], [1, 2, 1, "", "u"], [1, 2, 1, "", "x"], [1, 2, 1, "", "y"], [1, 2, 1, "", "z"]], "dbcquantum.err": [[3, 4, 1, "", "ConditionError"], [3, 1, 1, "", "ConditionErrorInfo"], [3, 4, 1, "", "DbCQuantumError"], [3, 4, 1, "", "MeasureConditionError"], [3, 1, 1, "", "MeasureConditionErrorInfo"], [3, 4, 1, "", "StateConditionError"], [3, 1, 1, "", "StateConditionErrorInfo"], [3, 1, 1, "", "SuperpositionInfo"], [3, 4, 1, "", "SuperpositionStateConditionError"], [3, 1, 1, "", "SuperpositionStateConditionErrorInfo"]], "dbcquantum.err.MeasureConditionErrorInfo": [[3, 3, 1, "", "condition_name"], [3, 3, 1, "", "param"], [3, 3, 1, "", "postprocessed_result"], [3, 3, 1, "", "pre_measure_state"], [3, 3, 1, "", "result"]], "dbcquantum.err.StateConditionError": [[3, 3, 1, "", "info"]], "dbcquantum.err.StateConditionErrorInfo": [[3, 3, 1, "", "condition_name"], [3, 3, 1, "", "param"], [3, 3, 1, "", "post_state"], [3, 3, 1, "", "pre_state"]], "dbcquantum.err.SuperpositionInfo": [[3, 3, 1, "", "l"]], "dbcquantum.err.SuperpositionStateConditionError": [[3, 3, 1, "", "info"]], "dbcquantum.err.SuperpositionStateConditionErrorInfo": [[3, 3, 1, "", "condition_name"], [3, 3, 1, "", "param"], [3, 3, 1, "", "post_state"], [3, 3, 1, "", "post_superposition_states"], [3, 3, 1, "", "pre_state"], [3, 3, 1, "", "pre_superposition_states"], [3, 3, 1, "", "state1"], [3, 3, 1, "", "state2"]], "dbcquantum.utils": [[4, 5, 1, "", "bin_frac_to_dec"], [4, 5, 1, "", "binary_basis"], [4, 5, 1, "", "coeff_of_basis"], [4, 5, 1, "", "decompose"], [4, 5, 1, "", "density_matrix_to_statevector"], [4, 5, 1, "", "eq_state"], [4, 5, 1, "", "is_basis"], [4, 5, 1, "", "is_scalar_multiple"], [4, 5, 1, "", "make_zeros_state"], [4, 5, 1, "", "partial_state"], [4, 5, 1, "", "split_each_qubit_states"], [4, 5, 1, "", "state_sum"], [4, 5, 1, "", "to_Statevector"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function"}, "terms": {"": [0, 1, 4], "0": [1, 4], "1": [1, 4], "2": 4, "3": 4, "6875": 4, "8125": 4, "A": [1, 3, 4], "For": 1, "If": [1, 4], "In": 1, "It": 1, "One": 4, "The": [1, 3, 4], "absolut": 4, "accord": 1, "actual": [1, 3], "ad": 1, "add": 1, "add_condit": [0, 1], "add_condition_use_param": [0, 1], "add_conditions_gen": [0, 1], "add_eq_circuit": [0, 1], "add_eq_circuit_use_param": [0, 1], "add_eq_circuits_gen": [0, 1], "add_post_condit": [0, 1], "add_post_condition_use_param": [0, 1], "add_post_conditions_gen": [0, 1], "add_pre_condit": [0, 1], "add_pre_condition_use_param": [0, 1], "add_pre_conditions_gen": [0, 1], "addit": 1, "aer_simul": 1, "aerbackend": 1, "aersimul": 1, "affect": 1, "after": [1, 4], "all": [1, 4], "allow": 1, "along": 1, "also": 1, "amplitud": [1, 3], "an": [1, 3, 4], "angl": 1, "api": 1, "append": [0, 1], "append_superposit": [0, 1], "append_superposition_basi": [0, 1], "append_superposition_basis_from_param": [0, 1], "append_superposition_gen": [0, 1], "appli": 1, "approach": 1, "aqc": 1, "aqcmeasur": [0, 1, 5], "ar": [1, 3, 4], "assert": [1, 3], "assertquantumcircuit": [0, 1, 5], "associ": 1, "atol": 4, "automat": 1, "backend": 1, "barrier": [0, 1], "base": [1, 3], "basi": 4, "basis_g": 4, "befor": [1, 3, 4], "bin_frac_to_dec": [0, 4, 5], "binari": 4, "binary_basi": [0, 4, 5], "binary_fract": 4, "binary_fraction_to_decim": 4, "bodi": 1, "bool": [1, 4], "boolean": 1, "both": 1, "calcul": [1, 4], "callabl": 1, "can": [1, 4], "ccx": [0, 1], "check": [1, 4], "circuit": [0, 3, 5, 6], "circuit_gen": 1, "class": [1, 3], "coeff_of_basi": [0, 4, 5], "coeffici": 4, "com": 1, "combin": 1, "common": [0, 5, 6], "compar": [1, 4], "comparison": 4, "compat": 4, "complex": [1, 3, 4], "compon": 1, "comput": 1, "condit": 1, "condition_nam": [0, 3], "conditionerror": [0, 3, 5], "conditionerrorinfo": [0, 3, 5], "conditions_gen": 1, "conditon_gen": 1, "consid": 1, "consist": 1, "construct": 1, "contain": 4, "contract": 0, "control": 1, "control_qubit": 1, "control_qubit1": 1, "control_qubit2": 1, "convers": 4, "convert": [1, 4], "copi": [0, 1], "correspond": 4, "cp": [0, 1], "creat": [1, 4], "ctrl_state": 1, "cx": [0, 1], "data": [1, 3], "dataclass": 3, "dbcquantumerror": [0, 3, 5], "decim": 4, "decompos": [0, 1, 4, 5], "decomposit": [1, 3, 4], "default": [1, 4], "densiti": 4, "density_matrix_to_statevector": [0, 4, 5], "densitymatrix": 4, "deriv": 1, "design": [0, 1], "detail": 1, "displai": 1, "distribut": 1, "doc": 1, "document": 1, "doe": 1, "dt": 4, "dure": 1, "each": [1, 4], "eigenvalu": 4, "eigenvector": 4, "element": 1, "enabl": 1, "end": 1, "entir": 4, "eq_stat": [0, 4, 5], "equival": [1, 4], "err": [0, 5, 6], "error": [1, 3], "establish": 1, "exampl": 4, "except": 3, "execut": 1, "exist": 1, "expect": [1, 3], "express": 4, "extract": [1, 4], "failur": 3, "fals": 4, "final": 1, "first": [1, 3, 4], "fix": 1, "float": [1, 4], "focus_qubit": [1, 4], "form": 4, "fraction": 4, "framework": [0, 1], "from": [1, 4], "function": 1, "funtion": 1, "gate": [1, 4], "gener": [1, 3, 4], "given": 4, "global": [1, 4], "h": [0, 1], "hadamard": 1, "here": 1, "hold": 3, "http": 1, "i": [0, 1, 3, 4], "ibm": 1, "ident": 1, "identifi": 1, "ignor": 1, "inconsist": 3, "independ": 1, "index": 6, "indic": 1, "individu": 4, "info": [0, 3], "inform": 3, "init_st": 1, "initi": 1, "inner": 1, "input": [1, 4], "instanc": 1, "instract": 4, "instruct": [1, 4], "int": [1, 4], "invers": [0, 1], "invert": 1, "is_basi": [0, 4, 5], "is_scalar_multipl": [0, 4, 5], "iter": [1, 4], "its": 3, "just": [1, 3], "k": 4, "know": 4, "kv": 4, "l": [0, 3], "lam": 1, "lambda": 1, "less": 1, "linearli": 1, "list": [1, 3, 4], "main": 1, "make_zeros_st": [0, 4, 5], "matrix": 4, "measur": [1, 3], "measureconditionerror": [0, 3, 5], "measureconditionerrorinfo": [0, 3, 5], "messag": 3, "method": 1, "minu": 4, "modul": [0, 5, 6], "more": 1, "name": [1, 3], "ndarrai": [1, 4], "non": [1, 4], "none": [1, 3, 4], "np": [1, 4], "num_qubit": [0, 1, 4], "number": [1, 4], "object": 3, "obtain": 1, "occur": 1, "omit": 1, "onli": [1, 4], "oper": 4, "operatorbas": [1, 4], "option": [1, 4], "order": [1, 4], "origin": 1, "other": 4, "otherwis": 4, "over": 1, "p": [0, 1, 3], "packag": [5, 6], "page": 6, "pair": [1, 3], "param": [0, 1, 3], "param_convert": 1, "paramet": [1, 3, 4], "parameter": 1, "parameterexpress": 1, "parametervaluetyp": 1, "part": 1, "partial_st": [0, 4, 5], "pass": 1, "phase": [1, 4], "phi": 1, "plu": 4, "post": [1, 3], "post_stat": [0, 3], "post_state_basi": 1, "post_superposition_st": [0, 1, 3], "post_superposition_states_gen": 1, "postprocess": [1, 3], "postprocessed_result": [0, 3], "poststat": 1, "pre": [1, 3], "pre_measure_st": [0, 3], "pre_stat": [0, 3], "pre_state_basi": 1, "pre_superposition_st": [0, 1, 3], "pre_superposition_states_gen": 1, "prestat": 1, "print": 4, "process": 1, "provid": 1, "pure": 4, "q": 1, "qarg": 1, "qiskit": 1, "qiskiterror": 4, "quantum": [0, 1, 3, 4], "quantumcircuit": 1, "qubit": [1, 4], "qubit1": 1, "qubit2": 1, "qubitspecifi": [1, 4], "r": [1, 3], "rais": [3, 4], "rang": 1, "raw": [1, 3], "refer": 1, "reflect": 4, "regard": 3, "rel": 4, "relat": [1, 3], "remov": 1, "remove_assert": [0, 1], "remove_assertions_to_circuit": [0, 1], "repetit": 1, "repres": [1, 4], "represent": 4, "respect": 1, "result": [0, 1, 3, 4], "return": [1, 4], "reus": 1, "revers": [1, 4], "rotat": 1, "rtol": 4, "run": [0, 1], "run_without_assert": [0, 1], "runtim": [1, 3], "rutim": 1, "rx": [0, 1], "ry": [0, 1], "rz": [0, 1], "rzx": [0, 1], "s1": [1, 4], "s2": [1, 4], "satisfi": 1, "scalar": 4, "sdg": [0, 1], "search": 6, "second": [1, 3, 4], "seed": 1, "seed_simul": 1, "separ": 1, "sequenc": 4, "set": [1, 4], "shot": 1, "should": 1, "simul": 1, "skip": 1, "so": 1, "softwar": 0, "some": 4, "someth": 3, "sourc": [1, 3, 4], "specifi": [1, 3, 4], "split": 4, "split_each_qubit_st": [0, 4, 5], "sqrt": 4, "stand": 1, "state": [1, 3, 4], "state1": [0, 3], "state2": [0, 3], "state_sum": [0, 4, 5], "stateconditionerror": [0, 3, 5], "stateconditionerrorinfo": [0, 3, 5], "statevector": [1, 3, 4], "str": [1, 3, 4], "submodul": [5, 6], "sum": 4, "superposit": [1, 3], "superpositioninfo": [0, 3, 5], "superpositionstateconditionerror": [0, 3, 5], "superpositionstateconditionerrorinfo": [0, 3, 5], "swap": [0, 1], "sx": [0, 1], "sxdg": [0, 1], "t": [0, 1], "tag": [1, 3], "take": 1, "target": 1, "target_qubit": 1, "tdg": [0, 1], "them": 1, "theta": 1, "thi": [0, 1, 3], "to_statevector": [0, 4, 5], "toffoli": [0, 1], "toler": 4, "true": 4, "tupl": [1, 3, 4], "two": 1, "type": [1, 4], "typic": 1, "u": [0, 1, 4], "union": 4, "up": 4, "us": [1, 4], "user": [1, 3], "util": [0, 5, 6], "v": 4, "valid": [1, 4], "valu": [1, 4], "vec": 4, "vector": [1, 4], "verif": 1, "verifi": 1, "want": 4, "when": [1, 3], "where": 1, "whether": [1, 4], "which": [1, 4], "while": 1, "whose": 4, "within": 1, "without": 1, "written": 1, "wrong": 3, "x": [0, 1], "y": [0, 1], "you": [1, 4], "z": [0, 1], "zero": 4}, "titles": ["dbcquantum package", "dbcquantum.circuit module", "dbcquantum.common module", "dbcquantum.err module", "dbcquantum.utils module", "dbcquantum", "Welcome to DbCquantum\u2019s documentation!"], "titleterms": {"": 6, "circuit": 1, "common": 2, "content": 6, "dbcquantum": [0, 1, 2, 3, 4, 5, 6], "document": 6, "err": 3, "indic": 6, "modul": [1, 2, 3, 4], "packag": 0, "submodul": 0, "tabl": 6, "util": 4, "welcom": 6}})